<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@ 
 output extension=".cs"#> 
<#
CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\\ZKH.Blog.Model\\DataModel.edmx"; 

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);

string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);
#>
using System.Configuration;
using System.Reflection;
using ZKH.Blog.DAL;
using ZKH.Blog.IDAL;

namespace ZKH.Blog.DalFactory
{
    public class StaticDalFactory
    {
        public readonly static string assemblyName = ConfigurationManager.AppSettings["DalAssemblyName"];

<#
foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{    
#>	
        public static I<#=entity.Name#>Dal Get<#=entity.Name#>Dal()
        {
            return Assembly.Load(assemblyName).CreateInstance(assemblyName + ".<#=entity.Name#>Dal") as <#=entity.Name#>Dal;
        }
<#}#>	
     }
}        